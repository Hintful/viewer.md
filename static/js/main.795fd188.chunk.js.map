{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["ReactGA","initialize","Render","id","dangerouslySetInnerHTML","__html","dompurify","sanitize","this","props","markdown","React","Component","Markdown","state","input","handleChange","bind","pageview","window","location","pathname","search","event","setState","target","value","className","class","onChange","marked","gfm","breaks","href","App","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,I,6DCWfA,IAAQC,WAAW,gB,IAEbC,E,4JACJ,WACE,OAAS,qBAAKC,GAAG,UAAUC,wBACvB,CAAEC,OAAQC,IAAUC,SAASC,KAAKC,MAAMC,iB,GAH3BC,IAAMC,WAQrBC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,MAAO,qUAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,qDAOnB,WACEjB,IAAQkB,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,U,0BAE9D,SAAaC,GACXf,KAAKgB,SAAS,CAAET,MAAOQ,EAAME,OAAOC,U,oBAEtC,WACE,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAMC,MAAM,QAAZ,uBACA,uBACA,sBAAMA,MAAM,YAAZ,yCAEF,sBAAKD,UAAU,SAAf,UACE,sBAAKC,MAAM,aAAX,UACE,uBAAMA,MAAM,WAAZ,UAAuB,mBAAGA,MAAM,gBAAhC,YACA,0BAAUzB,GAAG,SAASuB,MAAOlB,KAAKM,MAAMC,MAAOc,SAAUrB,KAAKQ,kBAEhE,sBAAKW,UAAU,aAAaxB,GAAG,cAA/B,UACE,sBAAKyB,MAAM,WAAX,UAAsB,mBAAGA,MAAM,eAA/B,YAIA,cAAC,EAAD,CAAQD,UAAU,SAASjB,SAAUoB,IAAOtB,KAAKM,MAAMC,MAAO,CAACgB,KAAK,EAAMC,QAAQ,YAGtF,sBAAKL,UAAU,SAAf,mCACwB,mBAAGM,KAAK,uBAAuBR,OAAO,SAAtC,iC,GApCTd,IAAMC,WAwDdsB,MAXf,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,cAACQ,EAAA,EAAD,UACE,gCA7DM,gBA+DR,cAAC,EAAD,QC5DSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.795fd188.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport dompurify from 'dompurify';\nimport marked from 'marked';\nimport ReactGA from 'react-ga';\n\nconst TITLE = \"viewer.md\";\n\nReactGA.initialize(\"G-D3Z7LQS3WW\");\n\nclass Render extends React.Component {\n  render() {\n    return ( <div id=\"preview\" dangerouslySetInnerHTML={\n        { __html: dompurify.sanitize(this.props.markdown) } // purify html via DOMPurify before setting html element to eliminate vulnerability against xss-attack\n      } /> );\n  }\n}\n\nclass Markdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"# Test  \\n## Test  \\n`Code test`  \\n* Item 1\\n* Item 2\\n* Item 3  \\n\\n```python\\ndef codeblock:\\n  return true\\n```  \\n\\n[Link](https://kurtchoi.dev)  \\n> Blockquote  \\n\\n**Bold Text**  \\n\\n*Italics*  \\n\\n![Markdown](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/175px-Markdown-mark.svg.png)\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n  handleChange(event) {\n    this.setState({ input: event.target.value });\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"top\">\n          <span class=\"title\">viewer.md</span>\n          <hr/>\n          <span class=\"sub-title\">A simple Markdown viewer</span>\n        </div>\n        <div className=\"bottom\">\n          <div class=\"editor-div\">\n            <span class=\"div-desc\"><i class=\"fas fa-edit\"></i>Editor</span>\n            <textarea id=\"editor\" value={this.state.input} onChange={this.handleChange} />\n          </div>\n          <div className=\"viewer-div\" id=\"preview-div\">\n            <div class=\"div-desc\"><i class=\"far fa-eye\"></i>Viewer</div>\n            { /* <div dangerouslySetInnerHTML={\n        { __html: DOMPurify.sanitize(marked(this.state.input, { gfm: true })) }\n      } /> */ }\n            <Render className=\"render\" markdown={marked(this.state.input, {gfm: true, breaks: true})} />\n          </div>\n        </div>\n        <div className=\"credit\">\n          Coded and designed by <a href=\"https://kurtchoi.dev\" target=\"_blank\">Kurt Choi</a>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n      <Markdown />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}